{"version":3,"sources":["../../../src/riot/mixins/transition.js"],"names":["transitionMixin","init","opts","transitionName","transition","name","origUnmount","unmount","mountTransition","target","nodeTarget","root","classList","add","setTimeout","remove","guard","unmountTransition","call","addEventListener","one","Object","defineProperty","value"],"mappings":";;;;;AAAO,IAAMA,4CAAkB,SAAlBA,eAAkB;AAAA,WAAe;AAC1CC,cAAM,gBAAW;AAAA;;AACb,gBAAG,EAAE,gBAAgB,KAAKC,IAAvB,CAAH,EACI;AACJ,gBAAMC,iBAAiB,KAAKD,IAAL,CAAUE,UAAV,CAAqBC,IAA5C;AACA,gBAAMC,cAAc,KAAKC,OAAzB;;AAEA,gBAAMC,kBAAkB,SAAlBA,eAAkB,GAAM;AAC1B,oBAAMC,SAAS,CAACC,cAAe;AAAA,2BAAM,MAAKC,IAAX;AAAA,iBAAhB,GAAf;AACA,oBAAG,CAACF,MAAJ,EAAY;;AAEZA,uBAAOG,SAAP,CAAiBC,GAAjB,CAAqBV,cAArB;AACAM,uBAAOG,SAAP,CAAiBC,GAAjB,CAAwBV,cAAxB;AACAW,2BAAW,YAAM;AACbL,2BAAOG,SAAP,CAAiBG,MAAjB,CAA2BZ,cAA3B;AACH,iBAFD,EAEG,EAFH;AAGH,aATD;;AAWA,gBAAIa,QAAQ,KAAZ;AACA,gBAAMC,oBAAoB,SAApBA,iBAAoB,GAAM;AAC5B,oBAAGD,KAAH,EAAU;AACVA,wBAAQ,IAAR;AACA,oBAAMP,SAAS,CAACC,cAAe;AAAA,2BAAM,MAAKC,IAAX;AAAA,iBAAhB,GAAf;AACA,oBAAG,CAACF,MAAJ,EAAY,OAAOH,YAAYY,IAAZ,OAAP;;AAEZT,uBAAOU,gBAAP,CAAwB,eAAxB,EAAyC,YAAM;AAC3Cb,gCAAYY,IAAZ;AACH,iBAFD;AAGAT,uBAAOG,SAAP,CAAiBC,GAAjB,CAAwBV,cAAxB;AACH,aAVD;;AAYA,iBAAKiB,GAAL,CAAS,OAAT,EAAkBZ,eAAlB;AACAa,mBAAOC,cAAP,CAAsB,IAAtB,EAA4B,SAA5B,EAAuC;AACnCC,uBAAON;AAD4B,aAAvC;AAGH;AAnCyC,KAAf;AAAA,CAAxB","file":"transition.js","sourcesContent":["export const transitionMixin = nodeTarget => ({\n    init: function() {\n        if(!(\"transition\" in this.opts))\n            return\n        const transitionName = this.opts.transition.name\n        const origUnmount = this.unmount\n\n        const mountTransition = () => {\n            const target = (nodeTarget || (() => this.root))()\n            if(!target) return\n\n            target.classList.add(transitionName)\n            target.classList.add(`${transitionName}-mount`)\n            setTimeout(() => {\n                target.classList.remove(`${transitionName}-mount`)\n            }, 10)\n        }\n\n        let guard = false\n        const unmountTransition = () => {\n            if(guard) return\n            guard = true\n            const target = (nodeTarget || (() => this.root))()\n            if(!target) return origUnmount.call(this)\n\n            target.addEventListener(\"transitionend\", () => {\n                origUnmount.call(this)\n            })\n            target.classList.add(`${transitionName}-unmount`)\n        }\n\n        this.one(\"mount\", mountTransition)\n        Object.defineProperty(this, \"unmount\", {\n            value: unmountTransition\n        })\n    }\n})\n"]}