{"version":3,"sources":["../../src/react/traits.js"],"names":["React","CSSTransitionGroup","printer","combine","factories","Component","reduce","accu","factory","displayName","name","WrappedComponent","withLabels","defaultLabels","props","labels","withListener","eventType","propName","mountOn","autoMount","listening","callback","subscribe","cb","onEvent","event","bind","mount","document","addEventListener","unmount","removeEventListener","nextProps","listener","withTransition","key","render","transition","PureComponent","withDebugUpdates","print","_","monkeyPatch","ref","originalFunction","shouldComponentUpdate","nextState","nextContext","propsDiff","stateDiff","push","state","debug","toString","join"],"mappings":"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","file":"traits.js","sourcesContent":["// @flow\n\nimport React from \"react\"\nimport CSSTransitionGroup from \"react-transition-group/CSSTransitionGroup\"\nimport { printer } from \"../tools/printer\"\n\ntype FunctionComponent<P> = (props: P) => ?React.Element<any>\ntype ClassComponent<D, P, S> = Class<React.Component<D, P, S>>\n\ntype factory<P: Object> = (ClassComponent<void, P, *> | FunctionComponent<P>) => ClassComponent<void, P, *>\n// _ is a workaround to keep bypass generic type destruction\n/* eslint-disable */\ntype trait<_ = any> = Object => factory<*>\n/* eslint-enable */\n\n/* HOC reducer helper */\nexport const combine = (...factories : factory<*>[]) =>\n    <P: any>(Component: ClassComponent<void, P, *>) : ClassComponent<void, P, *> =>\n        factories.reduce((accu, factory) => factory(accu), Component)\n\nconst displayName = (name, WrappedComponent) =>\n    `${name}(${ WrappedComponent.displayName || WrappedComponent.name || \"Component\" })`\n\n/* Adds i18n support through customisable labels. */\nexport const withLabels : trait<> = (defaultLabels: Object) => Component =>\n        class extends React.Component {\n            static displayName = displayName(\"withLabels\", Component)\n            render() {\n                return <Component { ...this.props } labels={ { ...defaultLabels, ...this.props.labels } }></Component>\n            }\n        }\n\n/* Adds a configurable global listener. */\nexport const withListener : trait<> = ({\n        eventType = \"click\",\n        propName = \"listener\",\n        mountOn = null,\n        autoMount = false } = {}) => Component =>\n    class extends React.Component<void, { listener: Object }, void> {\n\n        static displayName = displayName(\"withListener\", Component)\n        listening = false\n\n        /* Lifecycle */\n\n        constructor(props) {\n            super(props)\n            if(autoMount) this.mount()\n        }\n\n        componentWillUnmount() {\n            this.unmount()\n        }\n\n        componentWillReceiveProps(nextProps) {\n            if(mountOn) mountOn.bind(this)(nextProps) ? this.mount() : this.unmount()\n        }\n\n        /* Subscriptions */\n\n        callback = null\n        subscribe = (cb: Event => mixed) => {\n            this.callback = cb\n        }\n        onEvent = function(event: Event) {\n            if(this.callback) this.callback(event)\n        }.bind(this)\n\n        /* Events */\n\n        mount = () => {\n            if(!this.listening) {\n                document.addEventListener(eventType, this.onEvent)\n                this.listening = true\n            }\n        }\n\n        unmount = () => {\n            if(this.listening) {\n                document.removeEventListener(eventType, this.onEvent)\n                this.listening = false\n            }\n        }\n\n        /* Rendering */\n\n        render() {\n            const listener = {\n                [propName]: {\n                    subscribe: this.subscribe,\n                    mount:     this.mount,\n                    unmount:   this.unmount\n                }\n            }\n            return <Component { ...listener } { ...this.props } ></Component>\n        }\n    }\n\n/* Adds transitions on component mount / unmount. */\nexport const withTransition : trait<> = ({ key }) => Component =>\n    class extends React.PureComponent {\n        static displayName = displayName(\"withTransition\", Component)\n        render = () =>\n            this.props.transition ?\n                <CSSTransitionGroup { ...this.props.transition }>\n                    <Component { ...this.props } key={ key(this.props) }></Component>\n                </CSSTransitionGroup> :\n            <Component { ...this.props }></Component>\n    }\n\n/* Add debug info for component updates */\nexport const withDebugUpdates : trait<> = ({ print = (_:string) : string => _ }) => Component =>\n    class extends React.Component {\n        static displayName = displayName(\"withDebugUpdates\", Component)\n        monkeyPatch = (ref: Object) => {\n            if(!ref) return\n            const originalFunction = ref.shouldComponentUpdate\n            ref.shouldComponentUpdate = function(nextProps, nextState, nextContext) {\n                const propsDiff = []\n                const stateDiff = []\n                for(const key in nextProps) {\n                    if(nextProps[key] !== ref.props[key])\n                        propsDiff.push(key)\n                }\n                for(const key in nextState) {\n                    if(nextState[key] !== ref.state[key])\n                        stateDiff.push(key)\n                }\n                /* eslint-disable */\n                printer.debug(`shouldComponentUpdate [${print(ref.toString())}]`, `State diff : ${stateDiff.join(\" \")}\\nProps diff : ${propsDiff.join(\" \")}`)\n                /* eslint-enable */\n                return originalFunction.bind(ref)(nextProps, nextState)\n            }\n        }\n\n        render = () =>\n            <Component {...this.props}\n                ref={ ref => this.monkeyPatch(ref) }>\n            </Component>\n\n    }\n"]}