{"version":3,"sources":["../../src/react/traits.js"],"names":["mixin","printer","React","CSSTransitionGroup","setupHoc","hocFactory","name","hoc","Component","displayName","combine","traits","reduce","accu","trait","withLabels","labels","rest","defaultLabels","withListener","eventType","propName","mountOn","autoMount","props","callback","subscribe","cb","onEvent","event","bind","mount","listening","document","addEventListener","unmount","removeEventListener","nextProps","listener","withTransition","key","transition","withDebugUpdates","print","a","monkeyPatch","ref","originalFunction","shouldComponentUpdate","nextState","propsDiff","stateDiff","push","state","debug","render"],"mappings":"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","file":"traits.js","sourcesContent":["import { mixin } from \"../tools/mixin\"\nimport { printer } from \"../tools/printer\"\nimport React from \"react\"\n\nimport CSSTransitionGroup from \"react-transition-group/CSSTransitionGroup\"\n\n/* Setup higher order component with a readable name. */\nconst setupHoc = (hocFactory, name) => Component => {\n    const hoc = hocFactory(Component)\n    hoc.displayName = `${name}(${Component.displayName || Component.name || \"Component\"})`\n    return hoc\n}\n\n/* HOC reducer helper */\nexport const combine = (...traits) => Component =>\n    traits.reduce((accu, trait) => trait(accu), Component)\n\n\n/* Adds i18n support through customisable labels. */\nexport const withLabels = defaultLabels => setupHoc(Component => ({ labels = {}, ...rest }) =>\n    <Component labels={ mixin(defaultLabels, labels) } { ...rest } ></Component>\n, \"withLabels\")\n\n/* Adds a configurable global listener. */\nexport const withListener = ({\n        eventType = \"click\",\n        propName = \"listener\",\n        mountOn = null,\n        autoMount = false } = {}) => setupHoc(Component =>\n    class extends React.Component {\n\n        /* Lifecycle */\n\n        constructor(props) {\n            super(props)\n            if(autoMount) this.mount()\n        }\n\n        componentWillUnmount() {\n            this.unmount()\n        }\n\n        componentWillReceiveProps(nextProps) {\n            if(mountOn) mountOn.bind(this)(nextProps) ? this.mount() : this.unmount()\n        }\n\n        /* Subscriptions */\n\n        callback = null\n        subscribe = cb => {\n            this.callback = cb\n        }\n        onEvent = function(event) {\n            if(this.callback) this.callback(event)\n        }.bind(this)\n\n        /* Events */\n\n        mount = () => {\n            if(!this.listening) {\n                document.addEventListener(eventType, this.onEvent)\n                this.listening = true\n            }\n        }\n\n        unmount = () => {\n            if(this.listening) {\n                document.removeEventListener(eventType, this.onEvent)\n                this.listening = false\n            }\n        }\n\n        /* Rendering */\n\n        render() {\n            const listener = {\n                [propName]: {\n                    subscribe: this.subscribe,\n                    mount:     this.mount,\n                    unmount:   this.unmount\n                }\n            }\n            return <Component { ...listener } { ...this.props } ></Component>\n        }\n\n    }, \"withListener\")\n\n/* Adds transitions on component mount / unmount. */\nexport const withTransition = ({ key }) => setupHoc(Component => props =>\n    props.transition ?\n        <CSSTransitionGroup { ...props.transition }>\n            <Component { ...props } key={ key(props) }></Component>\n        </CSSTransitionGroup> :\n        <Component { ...props }></Component>\n, \"withTransition\")\n\n/* Add debug info for component updates */\nexport const withDebugUpdates = (print = (a => a)) => setupHoc(Component =>\n    class extends React.Component {\n\n        monkeyPatch = ref => {\n            if(!ref) return\n            const originalFunction = ref.shouldComponentUpdate\n            const shouldComponentUpdate = function(nextProps, nextState) {\n                const propsDiff = []\n                const stateDiff = []\n                for(const key in nextProps) {\n                    if(nextProps[key] !== ref.props[key])\n                        propsDiff.push(key)\n                }\n                for(const key in nextState) {\n                    if(nextState[key] !== ref.state[key])\n                        stateDiff.push(key)\n                }\n                /* eslint-disable */\n                printer.debug(`shouldComponentUpdate [${print(ref)}]`, `State diff : ${stateDiff}\\nProps diff : ${propsDiff}`)\n                /* eslint-enable */\n                return originalFunction.bind(ref)(nextProps, nextState)\n            }\n            ref.shouldComponentUpdate = shouldComponentUpdate\n        }\n\n        render = () =>\n            <Component {...this.props}\n                ref={ ref => this.monkeyPatch(ref) }>\n            </Component>\n\n    }, \"withDebugUpdates\")"]}