{"version":3,"sources":["../../../src/react/traits/helpers.js"],"names":["React","displayName","name","WrappedComponent"],"mappings":"AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAMA;AACA;;AAEA;;AAEA,OAAO,IAAMC,cAAc,SAAdA,WAAc,CAACC,IAAD,EAAeC,gBAAf;AAAA,WACpBD,IADoB,UACXC,iBAAiBF,WAAjB,IAAgCE,iBAAiBD,IAAjD,IAAyD,WAD9C;AAAA,CAApB;;;;;;;;kCAAMD,W","file":"helpers.js","sourcesContent":["// @flow\n\nimport React from \"react\"\n\nexport type FunctionComponent<P> = (props: P) => ?React.Element<any>\nexport type ClassComponent<D, P, S> = Class<React.Component<D, P, S>>\n\nexport type factory<P: Object> = (ClassComponent<void, P, *> | FunctionComponent<P>) => ClassComponent<void, P, *>\n// _ is a workaround to keep bypass generic type destruction\n/* eslint-disable */\nexport type trait<_ = any> = Object => factory<*>\n/* eslint-enable */\n\nexport const displayName = (name: string, WrappedComponent: *) =>\n    `${name}(${ WrappedComponent.displayName || WrappedComponent.name || \"Component\" })`\n"]}