// @flow

import type {RootNodeInput} from "../../core/logic";
import type {Key} from "react";
import {TreeViewNode} from "./TreeViewNode";
import {withLabels, combine, withListener} from "../traits";
import {RootNode, defaults} from "@bosket/core";
import React from "react";
declare export var TreeView: Class<React$Component<P, S>>;
export type TreeViewProps = {async?: (_: (_: mixed) => Promise<Array<Object>>) => Promise<Array<Object>>, category: string, css?: {[key: string]: string}, disabled?: (_: Object) => boolean, display?: (item: Object, inputs: Object) => any, dragndrop?: Object, keyDownListener?: Object, keyUpListener?: Object, labels?: Object, model: Array<Object>, noOpener?: boolean, onSelect: (newSelection: Array<Object>, item: Object, ancestors: Array<Object>, neighbours: Array<Object>) => void, search?: (_: string) => (_: Object) => boolean, selection: Array<Object>, sort?: (_: Object, _: Object) => number, strategies?: Object, transition?: Object, unique?: (_: Object) => string | number};
