{"version":3,"sources":["../../src/core/logic.js"],"names":["css","array","tree","selectionStrategies","foldStrategies","clickStrategies","defaults","Core","inputs","outputs","state","refresh","TreeNode","isSelected","get","selection","contains","item","isFolded","searched","isAsync","strategies","fold","map","strat","bind","reduce","last","curr","hasChildren","category","Array","isDisabled","disabled","isDraggable","dragndrop","draggable","isDroppable","droppable","mixCss","prop","ulCss","classes","depth","liCss","pending","unwrapPromise","push","async","then","res","catch","err","filter","e","onClick","click","forEach","event","ancestors","model","onSelect","stopPropagation","onOpener","newVal","unfolded","i","length","set","onDragStart","dragStart","onDragOver","preventDefault","dragGuard","dataTransfer","dropEffect","addClass","currentTarget","onDragEnter","hasClass","target","onDragLeave","removeClass","onDrop","items","kind","selfDrop","childDrop","prev","getDragEvents","condition","result","key","RootNode","modifiers","onKey","control","getModifierState","meta","shift","neighbours","selectionStrategy","newSelection","setData","JSON","stringify","onDrag","jsonData","getData","parse","wrapDragNDrop","filterTree","input","trim","treeFilter","search"],"mappings":"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","file":"logic.js","sourcesContent":["import { css, array, tree } from \"../tools\"\nimport { selectionStrategies, foldStrategies, clickStrategies } from \"./strategies\"\nimport { defaults } from \"./defaults\"\n\n/* Boilerplate  for framework class adapters */\nclass Core {\n\n    constructor(inputs, outputs, state, refresh) {\n        this.inputs = inputs\n        this.outputs = outputs\n        this.state = state\n        this.refresh = refresh\n    }\n\n}\n\n/* A tree node */\nexport class TreeNode extends Core {\n\n    /* Various checks */\n\n    isSelected = item => array(this.inputs.get().selection).contains(item)\n    isFolded = item =>\n        (!this.inputs.get().searched || this.isAsync(item)) &&\n        (this.inputs.get().strategies.fold || [])\n                    .map(strat => (foldStrategies[strat] || strat).bind(this))\n                        .reduce((last, curr) => last && curr(item, last), true)\n    hasChildren = item => item[this.inputs.get().category] && item[this.inputs.get().category] instanceof Array\n    isAsync = item => item[this.inputs.get().category] && typeof item[this.inputs.get().category] === \"function\"\n    isDisabled = item => this.inputs.get().disabled && this.inputs.get().disabled(item)\n    isDraggable = item =>\n            item &&\n            this.inputs.get().dragndrop.draggable && (\n            typeof this.inputs.get().dragndrop.draggable === \"function\" ?\n                this.inputs.get().dragndrop.draggable(item) :\n                true\n            )\n    isDroppable = item =>\n            this.inputs.get().dragndrop.droppable && (\n            typeof this.inputs.get().dragndrop.droppable === \"function\" ?\n                this.inputs.get().dragndrop.droppable(item) :\n                true\n            )\n\n    /* Styles calculation */\n\n    // Css mixin helper\n    mixCss = prop => this.inputs.get().css[prop] || defaults.css[prop]\n\n    ulCss = () =>\n        css.classes({\n            [`${this.mixCss(\"depth\")}-${this.inputs.get().depth || 0}`]: true\n        })\n\n    liCss = item =>\n        css.classes({\n            [this.mixCss(\"selected\")]:  this.isSelected(item),\n            [this.mixCss(\"category\")]:  this.hasChildren(item) || this.isAsync(item),\n            [this.mixCss(\"folded\")]:    this.hasChildren(item) || this.isAsync(item) ? this.isFolded(item) : null,\n            [this.mixCss(\"disabled\")]:  this.isDisabled(item),\n            [this.mixCss(\"async\")]:     this.isAsync(item) && this.isFolded(item),\n            [this.mixCss(\"loading\")]:   this.isAsync(item) && !this.isFolded(item)\n        })\n\n    /* Promises */\n\n    // Pending promises\n    pending = []\n\n    // Unwrap a promise and mutate the model to add the results\n    unwrapPromise = item => {\n        this.pending.push(item)\n        return this.inputs.get().async(item[this.inputs.get().category])\n            .then(res => {\n                item[this.inputs.get().category] = res\n                this.refresh()\n            })\n            .catch(err => {\n                /* eslint-disable */\n                throw err\n                /* eslint-enable */\n            })\n            .then(() => this.pending = this.pending.filter(e => e !== item))\n    }\n\n    /* Events */\n\n    // On item click\n    onClick = item => event => {\n        if(this.isDisabled(item))\n            return\n        (this.inputs.get().strategies.click || [])\n                    .map(strat => (clickStrategies[strat] || strat).bind(this))\n                        .forEach(strat => strat(item, event, this.inputs.get().ancestors, this.inputs.get().model))\n        this.inputs.get().onSelect(item, this.inputs.get().ancestors, this.inputs.get().model)\n        event.stopPropagation()\n    }\n\n    // On opener click\n    onOpener = item => event => {\n        const newVal = this.state.get().unfolded.filter(i => i !== item)\n        if(newVal.length === this.state.get().unfolded.length)\n            newVal.push(item)\n        this.state.set({ unfolded: newVal })\n        event.stopPropagation()\n    }\n\n    // Drag'n'drop //\n\n    onDragStart = item => event => {\n        event.stopPropagation()\n        this.inputs.get().dragndrop.dragStart(item, event, this.inputs.get().ancestors, this.inputs.get().model)\n    }\n    onDragOver = item => event => {\n        event.preventDefault()\n        event.stopPropagation()\n\n        if(this.dragGuard(item, event)) {\n            event.dataTransfer.dropEffect = \"none\"\n            css.addClass(event.currentTarget, this.mixCss(\"nodrop\"))\n            return\n        }\n\n        css.addClass(event.currentTarget, this.mixCss(\"dragover\"))\n    }\n    onDragEnter = item => event => {\n        event.preventDefault()\n        event.stopPropagation()\n        // If dragging over an opener\n        if(item && !this.dragGuard(item, event) && (this.hasChildren(item) || this.isAsync(item)) && css.hasClass(event.target, this.mixCss(\"opener\"))) {\n            const newVal = this.state.get().unfolded.filter(i => i !== item)\n            newVal.push(item)\n            this.state.set({ unfolded: newVal })\n        }\n    }\n    onDragLeave = event => {\n        event.stopPropagation()\n        css.removeClass(event.currentTarget, this.mixCss(\"dragover\"))\n        css.removeClass(event.currentTarget, this.mixCss(\"nodrop\"))\n    }\n    onDrop = item => event => {\n        event.stopPropagation()\n        css.removeClass(event.currentTarget, this.mixCss(\"dragover\"))\n        css.removeClass(event.currentTarget, this.mixCss(\"nodrop\"))\n        if(this.dragGuard(item, event))\n            return\n        const target = item ?\n            this.hasChildren(item) ?\n                item :\n                array(this.inputs.get().ancestors).last() :\n            null\n        this.inputs.get().dragndrop.onDrop(target, event)\n    }\n\n    // Guard against bad drop\n    dragGuard = (item, event) => {\n        // Prevent drop when not droppable\n        if(!this.isDroppable(item)) return false\n        // If we are dragging files authorize drop\n        const items = event.dataTransfer.items\n        if(items && items.length > 0 && items[0].kind === \"file\")\n            return false\n        // Prevent drop on self\n        const selfDrop = item && array(this.inputs.get().selection).contains(item)\n        // Prevent drop on child\n        const childDrop = this.inputs.get().ancestors &&\n                this.inputs.get().ancestors.reduce((prev, curr) =>\n                    prev || array(this.inputs.get().selection).contains(curr), false)\n\n        return selfDrop || childDrop\n    }\n\n    getDragEvents = (item, condition = true) => {\n        if(!condition) return {}\n        const result = {\n            draggable:      this.isDraggable(item),\n            onDragStart:    this.isDraggable(item) && this.onDragStart(item).bind(this),\n            onDragOver:     this.onDragOver(item).bind(this),\n            onDragEnter:    this.onDragEnter(item).bind(this),\n            onDragLeave:    this.onDragLeave.bind(this),\n            onDrop:         this.isDroppable(item) && this.onDrop(item).bind(this)\n        }\n        for(const key in result)\n            if(!result[key])\n                delete result[key]\n        return result\n    }\n\n}\n\n/* Root node of the tree */\nexport class RootNode extends Core {\n\n\n    /* Events */\n\n    // Keyboard modifiers list\n    modifiers = {}\n    onKey = function(event) {\n        this.modifiers = {\n            control: event.getModifierState(\"Control\"),\n            meta: event.getModifierState(\"Meta\"),\n            shift: event.getModifierState(\"Shift\")\n        }\n    }.bind(this)\n\n    // When new element(s) are selected\n    onSelect = function(item, ancestors, neighbours) {\n        const selectionStrategy = this.inputs.get().strategies.selection || []\n        const newSelection = selectionStrategy\n                                .map(strat => (selectionStrategies[strat] || strat).bind(this))\n                                    .reduce((last, curr) => curr(item, last, neighbours, ancestors), this.inputs.get().selection)\n        return this.outputs.onSelect(newSelection, item, ancestors, neighbours)\n    }.bind(this)\n\n    // Drag start\n    onDragStart = function(target, event, ancestors, neighbours) {\n        event.dataTransfer.setData(\"application/json\", JSON.stringify(target))\n        event.dataTransfer.dropEffect = \"move\"\n\n        if(!array(this.inputs.get().selection).contains(target)) {\n            this.onSelect(target, ancestors, neighbours)\n        }\n        this.outputs.onDrag(target, event, ancestors, neighbours)\n    }.bind(this)\n\n    // Drop event\n    onDrop = function(target, event) {\n        event.preventDefault()\n        const jsonData = event.dataTransfer.getData(\"application/json\")\n\n        this.outputs.onDrop(target, jsonData ? JSON.parse(jsonData) : null, event)\n    }.bind(this)\n\n    // Framework input wrapper\n    wrapDragNDrop = () => ({\n        ...this.inputs.get().dragndrop,\n        dragStart: this.onDragStart,\n        onDrop: this.onDrop\n    })\n\n    // Css mixin helper\n    mixCss = prop => this.inputs.get().css[prop] || defaults.css[prop]\n\n    // Filters the tree on a search\n    filterTree = input =>\n        !input.trim() ? null :\n            tree(this.inputs.get().model, this.inputs.get().category)\n                .treeFilter(this.inputs.get().search(input.trim()))\n\n}"]}