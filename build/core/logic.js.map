{"version":3,"sources":["../../src/core/logic.js"],"names":["css","array","tree","selectionStrategies","foldStrategies","clickStrategies","defaults","Core","inputs","outputs","state","refresh","TreeNode","isSelected","item","get","selection","contains","isFolded","strats","strategies","searched","isAsync","fold","map","strat","bind","reduce","last","curr","hasChildren","category","Array","isDisabled","disabledFun","disabled","isDraggable","dragndrop","draggable","isDroppable","droppable","mixCss","prop","ulCss","classes","depth","liCss","pending","unwrapPromise","push","asyncFun","async","Promise","reject","Error","then","res","catch","err","filter","e","onClick","event","click","forEach","ancestors","model","onSelect","stopPropagation","onDragStart","dragStart","onDragOver","preventDefault","dragGuard","dataTransfer","dropEffect","addClass","currentTarget","onDragEnter","hasClass","target","newVal","unfolded","i","set","onDragLeave","removeClass","onDrop","items","length","kind","selfDrop","childDrop","prev","getDragEvents","condition","result","key","RootNode","modifiers","onKey","control","getModifierState","meta","shift","neighbours","selectionStrategy","newSelection","setData","JSON","stringify","onDrag","jsonData","getData","parse","wrapDragNDrop","filterTree","input","search","trim","treeFilter"],"mappings":"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","file":"logic.js","sourcesContent":["// @flow\n\nimport { css, array, tree } from \"../tools\"\nimport { selectionStrategies, foldStrategies, clickStrategies } from \"./strategies\"\nimport { defaults } from \"./defaults\"\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n//  Boilerplate  for framework class adapters\n\nclass Core<Input: Object> {\n    inputs: { get: () => Input }\n    outputs: Object\n    state: { get: () => Object, set: Object => void }\n    refresh: () => void\n\n    constructor(inputs: { get: () => Input }, outputs: Object, state: { get: () => Object, set: Object => void }, refresh: () => void) {\n        this.inputs = inputs\n        this.outputs = outputs\n        this.state = state\n        this.refresh = refresh\n    }\n\n}\n\n/* -------------------------------------------------------------------------- */\n/* TREE NODE */\n\nexport type TreeNodeInput = {\n    model:              Object[],\n    category:           string,\n    selection:          Object[],\n    onSelect:           (item: Object, ancestors: Object[], neighbours: Object[]) => void,\n    ancestors:          Object[],\n    strategies?:        Object,\n    disabled?:          Object => boolean,\n    dragndrop:          Object,\n    css:                { [key: string]: string },\n    async?:             (mixed => Promise<Object[]>) => Promise<Object[]>,\n    depth?:             number\n}\n\nexport class TreeNode extends Core {\n\n    /* Various checks */\n\n    isSelected = (item: Object) => array(this.inputs.get().selection).contains(item)\n    isFolded = (item: Object) : boolean => {\n        const strats = this.inputs.get().strategies\n        return  (!this.inputs.get().searched || this.isAsync(item)) &&\n                    (strats && strats.fold || [])\n                        .map(strat => (foldStrategies[strat] || strat).bind(this))\n                            .reduce((last, curr) => last && curr(item, last), true)\n    }\n    hasChildren = (item: Object) => item[this.inputs.get().category] && item[this.inputs.get().category] instanceof Array\n    isAsync = (item: ?Object) : boolean => !!item && [this.inputs.get().category] && typeof item[this.inputs.get().category] === \"function\"\n    isDisabled= (item: Object) => {\n        const disabledFun = this.inputs.get().disabled\n        return disabledFun ? disabledFun(item) : false\n    }\n    isDraggable = (item: ?Object) =>\n        item &&\n        this.inputs.get().dragndrop.draggable && (\n        typeof this.inputs.get().dragndrop.draggable === \"function\" ?\n            this.inputs.get().dragndrop.draggable(item) :\n            true\n        )\n    isDroppable = (item: ?Object) =>\n        this.inputs.get().dragndrop.droppable && (\n        typeof this.inputs.get().dragndrop.droppable === \"function\" ?\n            this.inputs.get().dragndrop.droppable(item) :\n            true\n        )\n\n    /* Styles calculation */\n\n    // Css mixin helper\n    mixCss = (prop: string) => this.inputs.get().css[prop] || defaults.css[prop]\n\n    ulCss = () =>\n        css.classes({\n            [`${this.mixCss(\"depth\")}-${this.inputs.get().depth || 0}`]: true\n        })\n\n    liCss = (item: Object) =>\n        css.classes({\n            [this.mixCss(\"selected\")]:  this.isSelected(item),\n            [this.mixCss(\"category\")]:  this.hasChildren(item) || this.isAsync(item),\n            [this.mixCss(\"folded\")]:    this.hasChildren(item) || this.isAsync(item) ? this.isFolded(item) : null,\n            [this.mixCss(\"disabled\")]:  this.isDisabled(item),\n            [this.mixCss(\"async\")]:     this.isAsync(item) && this.isFolded(item),\n            [this.mixCss(\"loading\")]:   this.isAsync(item) && !this.isFolded(item)\n        })\n\n    /* Promises */\n\n    // Pending promises\n    pending = []\n\n    // Unwrap a promise and mutate the model to add the results\n    unwrapPromise = (item: Object) => {\n        this.pending.push(item)\n        const asyncFun = this.inputs.get().async\n        if(!asyncFun)\n            return Promise.reject(new Error(\"No asyn prop.\"))\n        else\n            return asyncFun(item[this.inputs.get().category])\n                .then(res => {\n                    item[this.inputs.get().category] = res\n                    this.refresh()\n                })\n                .catch(err => {\n                    /* eslint-disable */\n                    throw err\n                    /* eslint-enable */\n                })\n                .then(() => this.pending = this.pending.filter(e => e !== item))\n    }\n\n    /* Events */\n\n    // On item click\n    onClick = (item: Object) =>\n        (event: MouseEvent) => {\n            if(this.isDisabled(item))\n                return\n            const strats = this.inputs.get().strategies;\n            (strats && strats.click || [])\n                        .map(strat => (clickStrategies[strat] || strat).bind(this))\n                            .forEach(strat => strat(item, event, this.inputs.get().ancestors, this.inputs.get().model))\n            this.inputs.get().onSelect(item, this.inputs.get().ancestors, this.inputs.get().model)\n            event.stopPropagation()\n        }\n\n    // On opener click\n    onOpener(item: Object) {\n        return (event: MouseEvent) => {\n            const newVal = this.state.get().unfolded.filter(i => i !== item)\n            if(newVal.length === this.state.get().unfolded.length)\n                newVal.push(item)\n            this.state.set({ unfolded: newVal })\n            event.stopPropagation()\n        }\n    }\n\n    // Drag'n'drop //\n\n    onDragStart = (item: ?Object) => (event: DragEvent) => {\n        event.stopPropagation()\n        this.inputs.get().dragndrop.dragStart(item, event, this.inputs.get().ancestors, this.inputs.get().model)\n    }\n    onDragOver = (item: ?Object) => (event: DragEvent) => {\n        event.preventDefault()\n        event.stopPropagation()\n\n        if(this.dragGuard(item, event)) {\n            event.dataTransfer && (event.dataTransfer.dropEffect = \"none\")\n            css.addClass(event.currentTarget, this.mixCss(\"nodrop\"))\n            return\n        }\n\n        css.addClass(event.currentTarget, this.mixCss(\"dragover\"))\n    }\n    onDragEnter = (item: ?Object) => (event: DragEvent) => {\n        event.preventDefault()\n        event.stopPropagation()\n        // If dragging over an opener\n        if(item && !this.dragGuard(item, event) && (this.hasChildren(item) || this.isAsync(item)) && css.hasClass(event.target, this.mixCss(\"opener\"))) {\n            const newVal = this.state.get().unfolded.filter(i => i !== item)\n            newVal.push(item)\n            this.state.set({ unfolded: newVal })\n        }\n    }\n    onDragLeave = (event: DragEvent) => {\n        event.stopPropagation()\n        css.removeClass(event.currentTarget, this.mixCss(\"dragover\"))\n        css.removeClass(event.currentTarget, this.mixCss(\"nodrop\"))\n    }\n    onDrop = (item: ?Object) => (event: DragEvent) => {\n        event.stopPropagation()\n        css.removeClass(event.currentTarget, this.mixCss(\"dragover\"))\n        css.removeClass(event.currentTarget, this.mixCss(\"nodrop\"))\n        if(this.dragGuard(item, event))\n            return\n        const target = item ?\n            this.hasChildren(item) ?\n                item :\n                array(this.inputs.get().ancestors).last() :\n            null\n        this.inputs.get().dragndrop.onDrop(target, event)\n    }\n\n    // Guard against bad drop\n    dragGuard = (item: ?Object, event: DragEvent) => {\n        // Prevent drop when not droppable\n        if(!this.isDroppable(item)) return false\n        // If we are dragging files authorize drop\n        const items = event.dataTransfer ? event.dataTransfer.items : null\n        if(items && items.length > 0 && items[0].kind === \"file\")\n            return false\n        // Prevent drop on self\n        const selfDrop = item && array(this.inputs.get().selection).contains(item)\n        // Prevent drop on child\n        const childDrop = this.inputs.get().ancestors &&\n                this.inputs.get().ancestors.reduce((prev, curr) =>\n                    prev || array(this.inputs.get().selection).contains(curr), false)\n\n        return selfDrop || childDrop\n    }\n\n    getDragEvents = (item: ?Object, condition?: boolean = true) => {\n        if(!condition) return {}\n        const result = {\n            draggable:      this.isDraggable(item),\n            onDragStart:    this.isDraggable(item) && this.onDragStart(item).bind(this),\n            onDragOver:     this.onDragOver(item).bind(this),\n            onDragEnter:    this.onDragEnter(item).bind(this),\n            onDragLeave:    this.onDragLeave.bind(this),\n            onDrop:         this.isDroppable(item) && this.onDrop(item).bind(this)\n        }\n        for(const key in result)\n            if(!result[key])\n                delete result[key]\n        return result\n    }\n\n}\n\n/* -------------------------------------------------------------------------- */\n/* Root node of the tree */\n\nexport type RootNodeInput = {\n    model:              Object[],\n    category:           string,\n    selection:          Object[],\n    strategies:         Object,\n    css:                { [key: string]: string },\n    dragndrop?:         Object,\n    search?:            string => Object => boolean\n}\n\nexport class RootNode extends Core {\n\n    /* Events */\n\n    // Keyboard modifiers list\n    modifiers = {}\n    onKey = function(event: KeyboardEvent) {\n        this.modifiers = {\n            control: event.getModifierState(\"Control\"),\n            meta: event.getModifierState(\"Meta\"),\n            shift: event.getModifierState(\"Shift\")\n        }\n    }.bind(this)\n\n    // When new element(s) are selected\n    onSelect = (item: Object, ancestors: Object[], neighbours: Object[]) => {\n        const selectionStrategy = this.inputs.get().strategies.selection || []\n        const newSelection = selectionStrategy\n                                .map(strat => (selectionStrategies[strat] || strat).bind(this))\n                                    .reduce((last, curr) => curr(item, last, neighbours, ancestors), this.inputs.get().selection)\n        return this.outputs.onSelect(newSelection, item, ancestors, neighbours)\n    }\n\n    // Drag start\n    onDragStart = (target: Object, event: DragEvent, ancestors: Object[], neighbours: Object[]) => {\n        event.dataTransfer && event.dataTransfer.setData(\"application/json\", JSON.stringify(target))\n        event.dataTransfer && (event.dataTransfer.dropEffect = \"move\")\n\n        if(!array(this.inputs.get().selection).contains(target)) {\n            this.onSelect(target, ancestors, neighbours)\n        }\n        this.outputs.onDrag(target, event, ancestors, neighbours)\n    }\n\n    // Drop event\n    onDrop = (target: Object, event: DragEvent) => {\n        event.preventDefault()\n        const jsonData = event.dataTransfer ?\n            event.dataTransfer.getData(\"application/json\") :\n            \"{}\"\n\n        this.outputs.onDrop(target, jsonData ? JSON.parse(jsonData) : null, event)\n    }\n\n    // Framework input wrapper\n    wrapDragNDrop = () => ({\n        ...this.inputs.get().dragndrop,\n        dragStart: this.onDragStart,\n        onDrop: this.onDrop\n    })\n\n    // Css mixin helper\n    mixCss = (prop: string) => this.inputs.get().css[prop] || defaults.css[prop]\n\n    // Filters the tree on a search\n    filterTree = (input: string) => {\n        const search = this.inputs.get().search\n        return !search ? null : !input.trim() ? null :\n            tree(this.inputs.get().model, this.inputs.get().category)\n                .treeFilter(search(input.trim()))\n    }\n\n}\n"]}