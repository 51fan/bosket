{"version":3,"sources":["../../src/core/dragndrop.js"],"names":["tree","dragndrop","drops","selection","target","model","category","updatedModel","filter","indexOf","e","filesystem","event","items","dataTransfer","length","kind","files","i","item","webkitGetAsEntry","getAsFile","push"],"mappings":";;AAEA,SAASA,IAAT,QAAqB,gBAArB;;AAEO,IAAMC,YAAY;AACrBC,WAAO;AACH;AACAC,mBAAW,mBAACC,MAAD,EAAiBC,KAAjB,EAAkCC,QAAlC,EAAoDH,UAApD,EAA4E;AACnF,gBAAII,eAAeP,KAAKK,KAAL,EAAYC,QAAZ,EAAsBE,MAAtB,CAA6B;AAAA,uBAAKL,WAAUM,OAAV,CAAkBC,CAAlB,IAAuB,CAA5B;AAAA,aAA7B,CAAnB;AACA,gBAAGN,MAAH,EACIA,OAAOE,QAAP,iCAAwBF,OAAOE,QAAP,CAAxB,sBAA6CH,UAA7C,GADJ,KAGII,4CAAoBA,YAApB,sBAAqCJ,UAArC;AACJ,mBAAOI,YAAP;AACH,SATE;AAUH;AACAI,oBAAY,oBAACC,KAAD,EAAsB;AAC9B,gBAAMC,QAAQD,MAAME,YAAN,GAAqBF,MAAME,YAAN,CAAmBD,KAAxC,GAAgD,IAA9D;AACA,gBAAGA,SAASA,MAAME,MAAN,GAAe,CAAxB,IAA6BF,MAAM,CAAN,EAASG,IAAT,KAAkB,MAAlD,EAA0D;AACtD,oBAAMC,QAAQ,EAAd;AACA,qBAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIL,MAAME,MAAzB,EAAiCG,GAAjC,EAAsC;AAClC;AACA,wBAAMC,OAAQN,MAAMK,CAAN,CAAD,CAAiBE,gBAAjB,MAAuCP,MAAMK,CAAN,EAASG;AAC7D;AADoD,sBAApD,CAEA,IAAGF,IAAH,EAAS;AACLF,8BAAMK,IAAN,CAAWH,IAAX;AACH;AACJ;AACD,uBAAOF,KAAP;AACH;AACD,mBAAO,IAAP;AACH;AA1BE;AADc,CAAlB;;;;;;;;;kCAAMhB,S","file":"dragndrop.js","sourcesContent":["// @flow\n\nimport { tree } from \"../tools/trees\"\n\nexport const dragndrop = {\n    drops: {\n        // \"Standard\"\" drop //\n        selection: (target: Object, model: Object[], category: string, selection: Object[]) => {\n            let updatedModel = tree(model, category).filter(e => selection.indexOf(e) < 0)\n            if(target)\n                target[category] = [ ...target[category], ...selection ]\n            else\n                updatedModel = [ ...updatedModel, ...selection ]\n            return updatedModel\n        },\n        // Returns a list of local files/folders dropped\n        filesystem: (event: DragEvent) => {\n            const items = event.dataTransfer ? event.dataTransfer.items : null\n            if(items && items.length > 0 && items[0].kind === \"file\") {\n                const files = []\n                for(let i = 0; i < items.length; i++) {\n                    /* eslint-disable */\n                    const item = (items[i] : any).webkitGetAsEntry() || items[i].getAsFile()\n                    /* eslint-enable */\n                    if(item) {\n                        files.push(item)\n                    }\n                }\n                return files\n            }\n            return null\n        }\n    }\n}\n"]}