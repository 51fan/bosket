{"version":3,"sources":["../../src/core/dragndrop.js"],"names":["css","array","tree","dragndrop","selection","model","cb","draggable","droppable","drag","item","event","inputs","dataTransfer","setData","JSON","stringify","guard","target","types","indexOf","selfDrop","contains","childDrop","ancestors","reduce","prev","curr","drop","updatedModel","category","filter","e","adjustedTarget","Array","last","pluck","backup","bak","setTimeout","cancel","parse","paste","data","getData","utils","filesystem","items","length","kind","files","i","webkitGetAsEntry","getAsFile","push","tickDragover","nodeEvents","onDragStart","stopPropagation","get","onDrag","onDragOver","preventDefault","dropEffect","addClass","currentTarget","mixCss","requestAnimationFrame","onDragEnter","hasChildren","isAsync","hasClass","newVal","state","unfolded","set","onDragLeave","removeClass","onDrop","onDragEnd","onCancel","wrapEvents","onSelect","neighbours","outputs"],"mappings":"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","file":"dragndrop.js","sourcesContent":["// @flow\n\nimport { css, array, tree } from \"../tools\"\n\n// Drag and drop presets //\n\nexport const dragndrop = {\n    // Moves the selection //\n    selection: (model: void => Object[], cb: Object[] => void) => ({\n        draggable: true,\n        droppable: true,\n        drag: (item: Object, event: DragEvent, inputs: Object) => {\n            event.dataTransfer && event.dataTransfer.setData(\"application/json\", JSON.stringify(inputs.selection))\n        },\n        guard: (target: ?Object, event: DragEvent, inputs: Object) => {\n            // Other data types\n            if(event && event.dataTransfer && event.dataTransfer.types.indexOf(\"application/json\") < 0)\n                return false\n            // Prevent drop on self\n            const selfDrop = () => target && array(inputs.selection).contains(target)\n            // Prevent drop on child\n            const childDrop = () => inputs.ancestors &&\n                    inputs.ancestors.reduce((prev, curr) =>\n                        prev || array(inputs.selection).contains(curr), false)\n\n            return selfDrop() || childDrop()\n        },\n        drop: (target: ?Object, event: DragEvent, inputs: Object) => {\n            let updatedModel = tree(model(), inputs.category).filter(e => inputs.selection.indexOf(e) < 0)\n            const adjustedTarget =\n                target ?\n                    target[inputs.category] && target[inputs.category] instanceof Array ?\n                        target :\n                        array(inputs.ancestors).last() :\n                    null\n            if(adjustedTarget)\n                adjustedTarget[inputs.category] = [ ...adjustedTarget[inputs.category], ...inputs.selection ]\n            else\n                updatedModel = [ ...updatedModel, ...inputs.selection ]\n            cb(updatedModel)\n        }\n    }),\n    // Plucks an item on drag\n    pluck: (model: void => Object[], cb: Object[] => void) => ({\n        draggable: true,\n        backup: [],\n        drag: (item: Object, event: DragEvent, inputs: Object) => {\n            bak = JSON.stringify(model())\n            event.dataTransfer && event.dataTransfer.setData(\"application/json\", JSON.stringify(item))\n            setTimeout(() => cb(tree(model(), inputs.category).filter(e => e !== item)), 20)\n        },\n        cancel: () => {\n            cb(JSON.parse(bak))\n        }\n    }),\n    // Pastes item(s) on drop\n    paste: (model: void => Object[], cb: Object[] => void) => ({\n        droppable: true,\n        drop: (target: Object, event: DragEvent, inputs: Object) => {\n            if(event.dataTransfer && event.dataTransfer.types.indexOf(\"application/json\") > -1) {\n                const data = JSON.parse(event.dataTransfer.getData(\"application/json\"))\n                let updatedModel = [...model()]\n                const adjustedTarget =\n                    target ?\n                        target[inputs.category] && target[inputs.category] instanceof Array ?\n                            target :\n                            array(inputs.ancestors).last() :\n                        null\n                if(adjustedTarget)\n                    adjustedTarget[inputs.category] = [ ...adjustedTarget[inputs.category], data ]\n                else\n                    updatedModel = [ ...updatedModel, data ]\n                cb(updatedModel)\n            }\n        }\n    })\n}\nlet bak = \"[]\"\n\n// Utils\n\nexport const utils = {\n    // Returns a list of local files/folders dropped\n    filesystem: (event: DragEvent) => {\n        const items = event.dataTransfer ? event.dataTransfer.items : null\n        if(items && items.length > 0 && items[0].kind === \"file\") {\n            const files = []\n            for(let i = 0; i < items.length; i++) {\n                /* eslint-disable */\n                const item = (items[i] : any).webkitGetAsEntry() || items[i].getAsFile()\n                /* eslint-enable */\n                if(item) {\n                    files.push(item)\n                }\n            }\n            return files\n        }\n        return null\n    }\n}\n\n// Internal use //\n\nlet tickDragover = false\nexport const nodeEvents = {\n    onDragStart: function(item: ?Object) {\n        return function(event: DragEvent) {\n            event.stopPropagation()\n            this.inputs.get().dragndrop.onDrag(item, event, this.inputs.get())\n        }\n    },\n    onDragOver: function(item: ?Object) {\n        return function(event: DragEvent) {\n            event.preventDefault()\n            event.stopPropagation()\n\n            if(tickDragover) return\n            tickDragover = true\n\n            if(this.inputs.get().dragndrop.guard && this.inputs.get().dragndrop.guard(item, event, this.inputs.get())) {\n                event.dataTransfer && (event.dataTransfer.dropEffect = \"none\")\n                css.addClass(event.currentTarget, this.mixCss(\"nodrop\"))\n            } else {\n                css.addClass(event.currentTarget, this.mixCss(\"dragover\"))\n            }\n\n            requestAnimationFrame(() => { tickDragover = false })\n        }\n    },\n    onDragEnter: function(item: ?Object) {\n        return function(event: DragEvent) {\n            event.preventDefault()\n            event.stopPropagation()\n            // If dragging over an opener\n            if(item && (this.hasChildren(item) || this.isAsync(item)) && css.hasClass(event.target, this.mixCss(\"opener\"))) {\n                const newVal = this.state.get().unfolded.filter(i => i !== item)\n                newVal.push(item)\n                this.state.set({ unfolded: newVal })\n            }\n        }\n    },\n    onDragLeave: function(event: DragEvent) {\n        event.stopPropagation()\n        css.removeClass(event.currentTarget, this.mixCss(\"dragover\"))\n        css.removeClass(event.currentTarget, this.mixCss(\"nodrop\"))\n    },\n    onDrop: function(item: ?Object) {\n        return function(event: DragEvent) {\n            event.stopPropagation()\n            css.removeClass(event.currentTarget, this.mixCss(\"dragover\"))\n            css.removeClass(event.currentTarget, this.mixCss(\"nodrop\"))\n            if(!this.inputs.get().dragndrop.guard || !this.inputs.get().dragndrop.guard(item, event, this.inputs.get())) {\n                this.inputs.get().dragndrop.onDrop(item, event, this.inputs.get())\n            }\n        }\n    },\n    onDragEnd: function(item: ?Object) {\n        return function(event: DragEvent) {\n            event.stopPropagation()\n            if(event.dataTransfer && event.dataTransfer.dropEffect === \"none\")\n                this.inputs.get().dragndrop.onCancel(item, event, this.inputs.get())\n        }\n    }\n}\n\nexport const wrapEvents = function() {\n    return {\n        ...this.inputs.get().dragndrop,\n        onDrag: (target: Object, event: DragEvent, inputs: Object) => {\n            if(!array(this.inputs.get().selection).contains(target)) {\n                this.onSelect(target, inputs.ancestors, inputs.neighbours)\n            }\n\n            this.outputs.onDrag && this.outputs.onDrag(target, event, inputs)\n        },\n        onDrop: (target: Object, event: DragEvent, inputs: Object) => {\n            event.preventDefault()\n            this.outputs.onDrop && this.outputs.onDrop(target, event, inputs)\n        },\n        onCancel: (target: Object, event: DragEvent, inputs: Object) => {\n            event.preventDefault()\n            if(event.dataTransfer && event.dataTransfer.dropEffect === \"none\")\n                this.outputs.onCancel && this.outputs.onCancel(target, event, inputs)\n        }\n    }\n}\n"]}