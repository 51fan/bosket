{"version":3,"sources":["../../src/core/dragndrop.js"],"names":["tree","dragndrop","drops","selection","target","model","category","updatedModel","filter","indexOf","e","filesystem","items","event","dataTransfer","length","kind","files","i","item","webkitGetAsEntry","getAsFile","push"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,gBAArB;;AAEO,IAAMC,YAAY;AACrBC,WAAO;AACH;AACAC,mBAAW,mBAACC,MAAD,EAASC,KAAT,EAAgBC,QAAhB,EAA0BH,UAA1B,EAAwC;AAC/C,gBAAII,eAAeP,KAAKK,KAAL,EAAYC,QAAZ,EAAsBE,MAAtB,CAA6B;AAAA,uBAAKL,WAAUM,OAAV,CAAkBC,CAAlB,IAAuB,CAA5B;AAAA,aAA7B,CAAnB;AACA,gBAAGN,MAAH,EACIA,OAAOE,QAAP,iCAAwBF,OAAOE,QAAP,CAAxB,sBAA6CH,UAA7C,GADJ,KAGII,4CAAoBA,YAApB,sBAAqCJ,UAArC;AACJ,mBAAOI,YAAP;AACH,SATE;AAUH;AACAI,oBAAY,2BAAS;AACjB,gBAAMC,QAAQC,MAAMC,YAAN,CAAmBF,KAAjC;AACA,gBAAGA,SAASA,MAAMG,MAAN,GAAe,CAAxB,IAA6BH,MAAM,CAAN,EAASI,IAAT,KAAkB,MAAlD,EAA0D;AACtD,oBAAMC,QAAQ,EAAd;AACA,qBAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIN,MAAMG,MAAzB,EAAiCG,GAAjC,EAAsC;AAClC,wBAAMC,OAAOP,MAAMM,CAAN,EAASE,gBAAT,MAA+BR,MAAMM,CAAN,EAASG,SAAT,EAA5C;AACA,wBAAGF,IAAH,EAAS;AACLF,8BAAMK,IAAN,CAAWH,IAAX;AACH;AACJ;AACD,uBAAOF,KAAP;AACH;AACD,mBAAO,IAAP;AACH;AAxBE;AADc,CAAlB;;;;;;;;;kCAAMhB,S","file":"dragndrop.js","sourcesContent":["import { tree } from \"../tools/trees\"\n\nexport const dragndrop = {\n    drops: {\n        // \"Standard\"\" drop //\n        selection: (target, model, category, selection) => {\n            let updatedModel = tree(model, category).filter(e => selection.indexOf(e) < 0)\n            if(target)\n                target[category] = [ ...target[category], ...selection ]\n            else\n                updatedModel = [ ...updatedModel, ...selection ]\n            return updatedModel\n        },\n        // Returns a list of local files/folders dropped\n        filesystem: event => {\n            const items = event.dataTransfer.items\n            if(items && items.length > 0 && items[0].kind === \"file\") {\n                const files = []\n                for(let i = 0; i < items.length; i++) {\n                    const item = items[i].webkitGetAsEntry() || items[i].getAsFile()\n                    if(item) {\n                        files.push(item)\n                    }\n                }\n                return files\n            }\n            return null\n        }\n    }\n}"]}