{"version":3,"sources":["../../src/core/dragndrop.js"],"names":["css","array","tree","dragndrop","selection","model","cb","draggable","droppable","guard","event","item","inputs","dataTransfer","types","length","selfDrop","contains","childDrop","ancestors","reduce","prev","curr","drop","target","updatedModel","category","filter","indexOf","e","adjustedTarget","Array","last","utils","filesystem","items","kind","files","i","webkitGetAsEntry","getAsFile","push","nodeEvents","onDragStart","stopPropagation","get","onDrag","onDragOver","preventDefault","dropEffect","addClass","currentTarget","mixCss","onDragEnter","hasChildren","isAsync","hasClass","newVal","state","unfolded","set","onDragLeave","removeClass","onDrop","onDragEnd","onCancel","wrapEvents","onSelect","neighbours","outputs"],"mappings":"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","file":"dragndrop.js","sourcesContent":["// @flow\n\nimport { css, array, tree } from \"../tools\"\n\n// Drag and drop presets //\n\nexport const dragndrop = {\n    // Moves the selection //\n    selection: (model: void => Object[], cb: Object[] => void) => ({\n        draggable: true,\n        droppable: true,\n        guard: (event: DragEvent, item: ?Object, inputs: Object) => {\n            // Other data types\n            if(event && event.dataTransfer && event.dataTransfer.types.length > 0)\n                return false\n            // Prevent drop on self\n            const selfDrop = () => item && array(inputs.selection).contains(item)\n            // Prevent drop on child\n            const childDrop = () => inputs.ancestors &&\n                    inputs.ancestors.reduce((prev, curr) =>\n                        prev || array(inputs.selection).contains(curr), false)\n\n            return selfDrop() || childDrop()\n        },\n        drop: (target: Object, event: DragEvent, inputs: Object) => {\n            let updatedModel = tree(model(), inputs.category).filter(e => inputs.selection.indexOf(e) < 0)\n            const adjustedTarget =\n                target ?\n                    target[inputs.category] && target[inputs.category] instanceof Array ?\n                        target :\n                        array(inputs.ancestors).last() :\n                    null\n            if(adjustedTarget)\n                adjustedTarget[inputs.category] = [ ...adjustedTarget[inputs.category], ...inputs.selection ]\n            else\n                updatedModel = [ ...updatedModel, ...inputs.selection ]\n            cb(updatedModel)\n        }\n    })\n}\n\n// Utils\n\nexport const utils = {\n    // Returns a list of local files/folders dropped\n    filesystem: (event: DragEvent) => {\n        const items = event.dataTransfer ? event.dataTransfer.items : null\n        if(items && items.length > 0 && items[0].kind === \"file\") {\n            const files = []\n            for(let i = 0; i < items.length; i++) {\n                /* eslint-disable */\n                const item = (items[i] : any).webkitGetAsEntry() || items[i].getAsFile()\n                /* eslint-enable */\n                if(item) {\n                    files.push(item)\n                }\n            }\n            return files\n        }\n        return null\n    }\n}\n\n// Internal use //\n\nexport const nodeEvents = {\n    onDragStart: function(item: ?Object) {\n        return function(event: DragEvent) {\n            event.stopPropagation()\n            this.inputs.get().dragndrop.onDrag(item, event, this.inputs.get())\n        }\n    },\n    onDragOver: function(item: ?Object) {\n        return function(event: DragEvent) {\n            event.preventDefault()\n            event.stopPropagation()\n\n            if(this.inputs.get().dragndrop.guard && this.inputs.get().dragndrop.guard(event, item, this.inputs.get())) {\n                event.dataTransfer && (event.dataTransfer.dropEffect = \"none\")\n                css.addClass(event.currentTarget, this.mixCss(\"nodrop\"))\n                return\n            }\n\n            css.addClass(event.currentTarget, this.mixCss(\"dragover\"))\n        }\n    },\n    onDragEnter: function(item: ?Object) {\n        return function(event: DragEvent) {\n            event.preventDefault()\n            event.stopPropagation()\n            // If dragging over an opener\n            if(item && (this.hasChildren(item) || this.isAsync(item)) && css.hasClass(event.target, this.mixCss(\"opener\"))) {\n                const newVal = this.state.get().unfolded.filter(i => i !== item)\n                newVal.push(item)\n                this.state.set({ unfolded: newVal })\n            }\n        }\n    },\n    onDragLeave: function(event: DragEvent) {\n        event.stopPropagation()\n        css.removeClass(event.currentTarget, this.mixCss(\"dragover\"))\n        css.removeClass(event.currentTarget, this.mixCss(\"nodrop\"))\n    },\n    onDrop: function(item: ?Object) {\n        return function(event: DragEvent) {\n            event.stopPropagation()\n            css.removeClass(event.currentTarget, this.mixCss(\"dragover\"))\n            css.removeClass(event.currentTarget, this.mixCss(\"nodrop\"))\n            this.inputs.get().dragndrop.onDrop(item, event, this.inputs.get())\n        }\n    },\n    onDragEnd: function(item: ?Object) {\n        return function(event: DragEvent) {\n            event.stopPropagation()\n            if(event.dataTransfer && event.dataTransfer.dropEffect === \"none\")\n                this.inputs.get().dragndrop.onCancel(item, event, this.inputs.get())\n        }\n    }\n}\n\nexport const wrapEvents = function() {\n    return {\n        ...this.inputs.get().dragndrop,\n        onDrag: (target: Object, event: DragEvent, inputs: Object) => {\n            if(!array(this.inputs.get().selection).contains(target)) {\n                this.onSelect(target, inputs.ancestors, inputs.neighbours)\n            }\n\n            this.outputs.onDrag && this.outputs.onDrag(target, event, inputs)\n        },\n        onDrop: (target: Object, event: DragEvent, inputs: Object) => {\n            event.preventDefault()\n            this.outputs.onDrop && this.outputs.onDrop(target, event, inputs)\n        },\n        onCancel: (target: Object, event: DragEvent, inputs: Object) => {\n            event.preventDefault()\n            if(event.dataTransfer && event.dataTransfer.dropEffect === \"none\")\n                this.outputs.onCancel && this.outputs.onCancel(target, event, inputs)\n        }\n    }\n}\n"]}